{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.http = {};\n    this.http = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  signUpUser(newUser) {\n    return this.httpClient.post(`${environment.BaseApiURL}/users`, JSON.stringify(newUser), this.http);\n  }\n  checkEmailExists(email) {\n    return this.httpClient.get(`${environment.BaseApiURL}/users`).pipe(map(users => users.some(user => user.email === email)));\n  }\n  login(email, password) {\n    return this.httpClient.get(`${environment.BaseApiURL}/users`).pipe(map(users => {\n      const user = users.find(u => u.email === email);\n      if (user && user.password === password) {\n        localStorage.setItem('loggedIn', 'true');\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n        return true;\n      }\n      return false;\n    }));\n  }\n  logout() {\n    localStorage.removeItem('loggedIn');\n    localStorage.removeItem('loggedInUser');\n  }\n  isLoggedIn() {\n    return localStorage.getItem('loggedIn') === 'true';\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","map","environment","UserService","constructor","httpClient","http","headers","signUpUser","newUser","post","BaseApiURL","JSON","stringify","checkEmailExists","email","get","pipe","users","some","user","login","password","find","u","localStorage","setItem","logout","removeItem","isLoggedIn","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/abdelslam/Desktop/Projects/Angular-noon-project/client/src/app/Services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IUser } from 'src/app/Models/iuser';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  http = {};\n\n  constructor(private httpClient: HttpClient) {\n    this.http = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n  }\n\n  signUpUser(newUser: IUser): Observable<IUser> {\n    return this.httpClient.post<IUser>(\n      `${environment.BaseApiURL}/users`,\n      JSON.stringify(newUser),\n      this.http\n    );\n  }\n  checkEmailExists(email: string): Observable<boolean> {\n    return this.httpClient\n      .get<IUser[]>(`${environment.BaseApiURL}/users`)\n      .pipe(\n        map((users: IUser[]) =>\n          users.some((user: IUser) => user.email === email)\n        )\n      );\n  }\n\n  login(email: string, password: string): Observable<boolean> {\n    return this.httpClient.get<IUser[]>(`${environment.BaseApiURL}/users`).pipe(\n      map((users: IUser[]) => {\n        const user = users.find((u: IUser) => u.email === email);\n        if (user && user.password === password) {\n          localStorage.setItem('loggedIn', 'true');\n          localStorage.setItem('loggedInUser', JSON.stringify(user));\n          return true;\n        }\n        return false;\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('loggedIn');\n    localStorage.removeItem('loggedInUser');\n  }\n\n  isLoggedIn(): boolean {\n    return localStorage.getItem('loggedIn') === 'true';\n  }\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,IAAI,GAAG,EAAE;IAGP,IAAI,CAACA,IAAI,GAAG;MACVC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EACH;EAEAQ,UAAUA,CAACC,OAAc;IACvB,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CACzB,GAAGR,WAAW,CAACS,UAAU,QAAQ,EACjCC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,EACvB,IAAI,CAACH,IAAI,CACV;EACH;EACAQ,gBAAgBA,CAACC,KAAa;IAC5B,OAAO,IAAI,CAACV,UAAU,CACnBW,GAAG,CAAU,GAAGd,WAAW,CAACS,UAAU,QAAQ,CAAC,CAC/CM,IAAI,CACHhB,GAAG,CAAEiB,KAAc,IACjBA,KAAK,CAACC,IAAI,CAAEC,IAAW,IAAKA,IAAI,CAACL,KAAK,KAAKA,KAAK,CAAC,CAClD,CACF;EACL;EAEAM,KAAKA,CAACN,KAAa,EAAEO,QAAgB;IACnC,OAAO,IAAI,CAACjB,UAAU,CAACW,GAAG,CAAU,GAAGd,WAAW,CAACS,UAAU,QAAQ,CAAC,CAACM,IAAI,CACzEhB,GAAG,CAAEiB,KAAc,IAAI;MACrB,MAAME,IAAI,GAAGF,KAAK,CAACK,IAAI,CAAEC,CAAQ,IAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK,CAAC;MACxD,IAAIK,IAAI,IAAIA,IAAI,CAACE,QAAQ,KAAKA,QAAQ,EAAE;QACtCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;QACxCD,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEd,IAAI,CAACC,SAAS,CAACO,IAAI,CAAC,CAAC;QAC1D,OAAO,IAAI;;MAEb,OAAO,KAAK;IACd,CAAC,CAAC,CACH;EACH;EAEAO,MAAMA,CAAA;IACJF,YAAY,CAACG,UAAU,CAAC,UAAU,CAAC;IACnCH,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC;EACzC;EAEAC,UAAUA,CAAA;IACR,OAAOJ,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;EACpD;;SA/CW3B,WAAW;;mBAAXA,MAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX/B,MAAW;EAAAgC,OAAA,EAAXhC,MAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}